상속: 부모 클래스의 멤버를 자식 클래스에서 쓸 수 있개 해준다.
단 private 접근 제한을 갖는 필드와 메소드는 제외!!
상속을 이용해서 클래스의 수정을 최소화 시켜 유지보수 시간을 절약한다.
상속하는 방법은
class 자식클래스 extends 부모클래스

자식클래스 자식클래스 = new 자식클래스()
위 코드를 실행하면 부모 객체가 먼저 생성되고 자식 객체가 다음에 생성된다.

모든 객체는 클래스의 생성자를 호출해야만 생성된다.
super()은 부모의 기본 생성자를 호출
기본 생성자 외 생성자를 호출해야한다면 spuer(매개값)을 사용
super(매개값)은 반드시 자식생성자 첫줄에 위치해야한다.

자식클래스에서 부모클래스의 특정한 메소드를 사용해야하지만 수정이 필요한 경우 메소드 오버라이딩 기능을 사용하여
자식클래스에서 동일한 메소드를 재정의할수있음!!
자식클래스에서 메소드가 오버라이딩되었다면 부모 객체의 메소드는 숨겨지고 자식 메소드가 호출됨
오버라이딩 규칙
1. 부모 메소드와 동일한 매개값을 가져야한다.
2. 접근 제한을 더 강하게 오버라이딩 할 수 없다.
3. 새로운 예외를 throws 할수 없다.

자식클래스에서 오버라이딩된 메소드를 사용하지않고 부모 메소드를 사용하고 싶을땐 super.부모메소드(); 사용

클래스 앞에 final을 붙이게 되면 그 클래스는 상속할 수 없는 클래스가 되고
메소드 앞에 final을 붙이게 되면 그 메소드는 오버라이딩 할 수 없는 메소드가 된다.

다형성: 같은 타입이지만 실행 결과가 다양한 객체를 이용할 수 있는 성질
자동타입변환: 프로그램 실행도중에 자동적으로 타입변환이 일어나는것
다형성을 위해 자바는 부모클래스로 타입 변환을 허용한다.
ChildClass child = new ChildClass();
ParentsClass parents = child;
->ParentsClass parents = new ChildClass();
위 코드에서 자식클래스와 부모클래스는 동일한 객체를 참조한다(부모클래스 == 자식클래스(=TRUE))
부모 타입으로 자동 타입 변환된 이후에는 자식 객체를 참조하지만 부모클래스에 선언된 필드와 메소드만 접근 가능
그러나! 메소드가 자식클래스에서 오버라이딩되었다면 자식클래스의 메소드가 대신 호출됨!!(중요)

